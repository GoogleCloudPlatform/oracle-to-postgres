#!/bin/bash

# Copyright 2020 Google Inc.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.


if [ "$1" == "build" ]
then
	docker build . -f Ora2PGDockerfile -t ${DOCKER_ORA2PG}
elif [ "$1" == "run" ]
then
	# Clear Out Old Reesults
	rm ora2pg/data/output.sql

	# Create New Ora2PG Data
	CURR_DIR=$(pwd)
	for ORACLE_TYPE in ${ORACLE_TYPES}
	do
		if [ "${ORACLE_SCHEMAS}" == "" ]
		then
			echo "Ora2PG: ${ORACLE_TYPE}_output.sql"
			docker run  \
				-v ${CURR_DIR}/ora2pg/config:/config \
				-v ${CURR_DIR}/ora2pg/data:/data \
				${DOCKER_ORA2PG} ora2pg --type ${ORACLE_TYPE} --out ${ORACLE_TYPE}_output.sql \
            --source ${ORACLE_DSN} --user ${ORACLE_USER} \
            --password ${ORACLE_PASSWORD} --forceowner ${DATABASE_USER}
			sudo chown -R $USER:$USER .
			sed -i '/CREATE TABLE/a \\trowid bigint GENERATED BY DEFAULT AS IDENTITY,' ora2pg/data/${ORACLE_TYPE}_output.sql
			cat ora2pg/data/${ORACLE_TYPE}_output.sql >> ora2pg/data/output.sql

			# If a table does not have a PK, add rowid
			CREATED_TABLES=$(grep 'CREATE TABLE' ora2pg/data/${ORACLE_TYPE}_output.sql | awk '{print $3;}')
			for CREATED_TABLE in ${CREATED_TABLES}
			do
				PK=$(grep "ALTER TABLE ${CREATED_TABLE} ADD PRIMARY KEY" ora2pg/data/${ORACLE_TYPE}_output.sql)
				if [ "${PK}" == "" ]
				then
					echo "ALTER TABLE ${CREATED_TABLE} ADD PRIMARY KEY (rowid);" >> ora2pg/data/output.sql
				fi
			done
		else
			for ORACLE_SCHEMA in ${ORACLE_SCHEMAS}
			do
				echo "Ora2PG: ${ORACLE_SCHEMA}.${ORACLE_TYPE}_output.sql"
				docker run  \
					-v ${CURR_DIR}/ora2pg/config:/config \
					-v ${CURR_DIR}/ora2pg/data:/data \
					${DOCKER_ORA2PG} ora2pg --type ${ORACLE_TYPE} --namespace ${ORACLE_SCHEMA} \
					--out ${ORACLE_TYPE}_${ORACLE_SCHEMA}_output.sql
				sudo chown -R $USER:$USER .
				sed -i '/CREATE TABLE/a \\trowid bigint GENERATED BY DEFAULT AS IDENTITY,' ora2pg/data/${ORACLE_TYPE}_${ORACLE_SCHEMA}_output.sql
				cat ora2pg/data/${ORACLE_TYPE}_${ORACLE_SCHEMA}_output.sql >> ora2pg/data/output.sql

				# If a table does not have a PK, add rowid
				CREATED_TABLES=$(grep 'CREATE TABLE' ora2pg/data/${ORACLE_TYPE}_${ORACLE_SCHEMA}_output.sql | awk '{print $3;}')
				for CREATED_TABLE in ${CREATED_TABLES}
				do
					PK=$(grep "ALTER TABLE ${CREATED_TABLE} ADD PRIMARY KEY" ora2pg/data/${ORACLE_TYPE}_${ORACLE_SCHEMA}_output.sql)
					if [ "${PK}" == "" ]
					then
						echo "ALTER TABLE ${CREATED_TABLE} ADD PRIMARY KEY (rowid);" >> ora2pg/data/output.sql
					fi
				done
			done
		fi
	done
elif [ "$1" == "deploy" ]
then
  # Deploy to GCS
  gsutil rm ${GCS_BUCKET}/resources/ora2pg/*
  gsutil cp ora2pg/data/output.sql ${GCS_BUCKET}/resources/ora2pg/output.sql

  # Apply ora2pg results in CloudSQL
  gcloud sql import sql \
    ${CLOUD_SQL} ${GCS_BUCKET}/resources/ora2pg/output.sql \
    --user=${DATABASE_USER} --project=${PROJECT_ID} --database=postgres --quiet
fi
